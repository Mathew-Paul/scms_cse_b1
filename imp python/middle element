top=-1

class Stack:
    def __init__(self):
        self.stack = []
    
    def push(self, item):
        global top
        top+=1
        self.stack.append(item)
        
    def pop(self):
        global top
        if not self.isEmpty():
            top-=1
            return self.stack.pop()
        else:
            print("Stack Underflow: Cannot pop item, stack is empty")
            return None
    
    def middle(self):
        global top
        if top==-1:
            print("Stack Empty")
        else:
            if top%2==0:
                return (self.stack[top//2])
            else:
                return [self.stack[top//2], self.stack[(top//2)+1]]
    def isEmpty(self):
        return len(self.stack) == 0
    
def main():
    stack = Stack()
    while True:
        print("\nChoose an option:")
        print("1. Push an element")
        print("2. Pop an element")
        print("3. Find middle element")
        print("4. Exit")

        ch = input("Enter your choice: ")
        
        if ch == '1':
            element = int(input("Enter element to push: "))
            stack.push(element)
            print(f"Pushed {element} to stack.")
        elif ch == '2':
            element = stack.pop()
            print(f"Popped element: {element}")
        elif ch == '3':
            middle_element = stack.middle()
            print(f"Middle element: {middle_element}")
        elif ch == '4':
            print("Exiting...")
            break
        else:
            print("Invalid choice.")

if __name__ == "__main__":
    main()   